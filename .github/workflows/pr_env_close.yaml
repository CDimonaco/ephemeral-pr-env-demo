name: Pull request environment cleanup

on:
  pull_request:
    types:
      - closed

env:
  PR_ENV_LABEL: env
  PR_NUMBER: "${{ github.event.pull_request.number }}"

jobs:
  check_env_creation_privilege:
    name: Check if the environment deletion criteria are met, store in the job output
    runs-on: ubuntu-latest
    outputs:
      create_env: ${{ steps.check.outputs.create_env }}
    steps:
      - id: check
        run: echo "create_env=${{ contains(github.event.pull_request.labels.*.name, env.PR_ENV_LABEL) }}" >> "$GITHUB_OUTPUT"

  delete-pr-image:
      needs: [check_env_creation_privilege]
      name: Delete pr images
      runs-on: ubuntu-latest
      if: needs.check_env_creation_privilege.outputs.create_env == 'true'
      permissions:
        contents: read
        packages: write
      env:
        REGISTRY: ghcr.io
        IMAGE_TAG: ${{ github.event.pull_request.number }}-env
      steps:
        - name: Cancel Previous Runs
          uses: styfle/cancel-workflow-action@0.11.0
          with:
            access_token: ${{ github.token }}
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - uses: docker/setup-buildx-action@v3
        - name: Log in to the Container registry
          uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
          with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Delete the container image
          uses: chipkent/action-cleanup-package@v1.0.1
          with:
            package-name: pr-api
            tag: ${{ env.IMAGE_TAG }}
            github-token: ${{ secrets.GITHUB_TOKEN }}

  cleanup_pr_environment:
    name: Cleanup the pr environment
    runs-on: ubuntu-latest
    needs: delete-pr-image
    env:
      PR_BASE_URL: ${{ github.event.pull_request.number }}.demoprenv.dimonaco.dev
      PR_NUMBER: ${{ github.event.pull_request.number }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install galaxy deps
        run: ansible-galaxy install -r ansible/requirements.yml
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: ansible/playbook.cleanup.yml
          key: ${{ secrets.SSH_PR_MACHINE_KEY }}
          inventory: |
            all:
              vars:
                ansible_user: root
              children:
                api-hosts:
                  hosts:
                    server:
                      ansible_host: ${{ secrets.PR_ENV_MACHINE_IP }} 
                postgres-hosts:
                  hosts:
                    server:
                      ansible_host: ${{ secrets.PR_ENV_MACHINE_IP }}
          options: |
            --extra-vars "api_postgres_db='${{ env.PR_NUMBER }}db' \
            api_postgres_user='${{ env.PR_NUMBER }}api' \
            api_container_name='${{ env.PR_NUMBER }}_api' \
            api_container_image='ghcr.io/cdimonaco/pr-api:${{ env.PR_NUMBER }}-env' \
            docker_network_name='${{ env.PR_NUMBER }}net' \
            nginx_vhost_filename='${{ env.PR_NUMBER }}' \
            api_server_name='${{ env.PR_BASE_URL }}' \
            api_postgres_password='${{ secrets.PR_ENV_PG_PASSWORD }}' \
            nginx_vhost_listen_port='80' \
            force_recreate_api_container='true' \
            force_pull_images='true' \
            api_upstream_name='${{ env.PR_NUMBER }}api'"